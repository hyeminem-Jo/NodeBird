{"ast":null,"code":"var _jsxFileName = \"/Users/johyejin/Desktop/FE-portfolio/react-nodebird/prepare/front/components/AppLayout.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\n\nconst AppLayout = ({\n  children\n}) => {\n  const router = useRouter(); // key 에러\n  // 더미 데이터 생성\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Menu, {\n    mode: \"horizontal\",\n    selectedKeys: [router.pathname],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"))), __jsx(Menu.Item, {\n    key: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }\n  }, \"\\uD504\\uB85C\\uD544\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Search, {\n    enterButton: true,\n    style: {\n      verticalAlign: 'middle'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), __jsx(Menu.Item, {\n    key: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(Row, {\n    gutter: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(Col, {\n    xs: 24,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, children), __jsx(Col, {\n    xs: 24,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"https://www.naver.com/\",\n    target: \"_blank\",\n    rel: \"noreferrer noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"\\uB124\\uC774\\uBC84\"))));\n}; // props 로 넘기는 것들은 propTypes 로 타입을 검사해주면 좋다.\n// children 은 리액트의 노드로, 화면에 그릴 수 있는 모든 것들(return 안의 모든 것)이 node 다.\n\n\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["/Users/johyejin/Desktop/FE-portfolio/react-nodebird/prepare/front/components/AppLayout.js"],"names":["React","useRouter","PropTypes","Link","Menu","Input","Row","Col","UserProfile","LoginForm","AppLayout","children","router","pathname","verticalAlign","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\n\nimport UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\n\nconst AppLayout = ({ children }) => {\n  const router = useRouter() // key 에러\n\n  // 더미 데이터 생성\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <div>\n      <Menu mode=\"horizontal\" selectedKeys={[router.pathname]}>\n        <Menu.Item key=\"/\">\n          <Link href=\"/\"><a>노드버드</a></Link>\n        </Menu.Item>\n\n        <Menu.Item key=\"/profile\">\n        <Link href=\"/profile\"><a>프로필</a></Link>\n        </Menu.Item>\n\n        <Menu.Item>\n        <Input.Search enterButton style={{verticalAlign: 'middle'}} />\n        </Menu.Item>\n\n        <Menu.Item key=\"/signup\">\n        <Link href=\"/signup\"><a>회원가입</a></Link>\n        </Menu.Item>\n      </Menu>\n\n    <Row gutter={30}>\n      <Col xs={24} sm={6}>\n        {/* 로그인이 된 상태면 유저의 프로필을, 아니면 로그인창을 띄움 */}\n        {/* {isLoggedIn ? <UserProfile /> : <LoginForm />} */}\n      </Col>\n\n      <Col xs={24} sm={12}>\n      {children}\n      </Col>\n\n      <Col xs={24} sm={6}>\n        <a href=\"https://www.naver.com/\" target=\"_blank\" rel=\"noreferrer noopener\">네이버</a>\n        {/* 다른 페이지에서 접근하는 target _blank 는 보안상의 위험이 있기 때문에 rel=\"noreferrer\" 를 적어주어야 한다. */}\n      </Col>\n    </Row>\n    </div>\n  );\n};\n\n// props 로 넘기는 것들은 propTypes 로 타입을 검사해주면 좋다.\n// children 은 리액트의 노드로, 화면에 그릴 수 있는 모든 것들(return 안의 모든 것)이 node 다.\nAppLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default AppLayout;\n"]},"metadata":{},"sourceType":"module"}